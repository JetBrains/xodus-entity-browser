plugins {
    id "ca.coglinc.javacc" version "2.3.1"
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = 'jetbrains.xodus.browser.web.MainKt'

def javaCCFolder = "src/main/generated"

sourceSets {
    main {
        java {
            srcDir file(javaCCFolder)
        }
    }
}

dependencies {
    compile lib('org.jetbrains.kotlin:kotlin-reflect')

    compile lib('ch.qos.logback:logback-classic')
    compile lib('ch.qos.logback:logback-core')

    compile project(':entity-browser-frontend')

    compile lib('org.jetbrains.xodus:xodus-environment')
    compile lib('org.jetbrains.xodus:xodus-entity-store')
    compile lib('org.jetbrains.xodus:xodus-openAPI')
    compile lib('org.jetbrains.xodus:xodus-crypto')

    compile "io.ktor:ktor-jackson:$ktorVersion"
    compile "io.ktor:ktor-auth:$ktorVersion"
    compile "io.ktor:ktor-server-jetty:$ktorVersion"

    testCompile lib('org.mockito:mockito-all')
    testCompile lib('junit:junit')
    testCompile lib('junit:junit')
    testCompile lib('com.squareup.retrofit2:retrofit')
    testCompile lib('com.squareup.retrofit2:converter-jackson')
}

shadowJar {
    archiveName = "xodus-entity-browser.jar"
    destinationDir = globalArtifactsBuildDir
    manifest {
        attributes 'Main-Class': 'jetbrains.xodus.browser.web.MainKt'
    }
}

artifacts {
    archives shadowJar
}

clean {
    delete javaCCFolder
}

compileJavacc {
    inputDirectory = file('src/main/javacc')
    outputDirectory = file(javaCCFolder + '/jetbrains/xodus/browser/web/search')
    // plugin wont create package for generated classes
}